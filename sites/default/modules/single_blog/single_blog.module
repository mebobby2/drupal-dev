<?php
// $Id$

define('SINGLE_BLOG_NODE_TYPE', 'article');
define('SINGLE_BLOG_LIST_COUNT', 3);
define('SINGLE_BLOG_DATE_FORMAT', 'F d, Y');

function single_blog_list($number) {
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created', 'uid'))
    ->condition('type', SINGLE_BLOG_NODE_TYPE)
    ->condition('status', 1)
    ->orderBy('created', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute();

  return $query;
}

# Registers our single_blog_block_item
function single_blog_theme($existing, $type, $theme, $path) {
  echo 'fuck';
  return array(
    'single_blog_block_item' => array(
      'variables' => array(
        'node' => NULL,
      ),
      'template' => 'single-blog-block-item',
    ),
  );
}

# Registers our single_blog_block_item pre process function
function template_preprocess_single_blog_block_item(&$variables) {
  $node = $variables['node'];
  // Create a renderable array for the title.
  $variables['title'] = array(
    '#type'  => 'link',
    '#title' => $node->title,
    '#href'  => 'node/' . $node->nid,
  );
  // Format the creation date of the node.
  $variables['created'] = $node->created;
  $variables['date'] = format_date($node->created, 'custom',
                                   SINGLE_BLOG_DATE_FORMAT);

  // Load the account object with the node's creator and store
     // in a variable for themer convenience.
     $variables['user'] = user_load($node->uid);
     // Theme the username.
     $variables['name'] = theme('username', array(
                           'account' => $variables['user']));

  dpm($variables);
}

function single_blog_block_info() {
  $blocks = array();

  $blocks['recent'] = array(
    'info' => t('Recent blog posts'), 
  );

  return $blocks;
}

function single_blog_block_view($delta = '') {
  $block = array('subject' => '', 'content' => '');

  if ($delta == 'recent') {
    $block['subject'] = t('Recent blog posts');

    if (user_access('access content')) {
      $results = single_blog_list(SINGLE_BLOG_LIST_COUNT);

      $items = array();
      foreach ($results as $node) {
        $items[] = array( #$items[] without a key automatically makes the key to a 0 integer
          'class' => array('node-' . $node->nid), #array(value) automatically makes the key to a 0 integer
          'data' => array(
            '#theme' => 'single_blog_block_item',
            '#node' => $node,
          )
        );
      }

      if (!empty($items)) {
        // $block['content'] = theme('item_list', array(
        //                       'items' => $items));

        $block['content']['list'] = array(
          '#theme' => 'item_list__single_blog',
          '#items' => $items,
          '#pre_render' => array('single_blog_item_list_child_render'),
        );

        $block['content']['more'] = array(
          '#theme' => 'more_link',
          '#url' => 'blog',
          '#title' => t('Read the latest blog entries.'),
        );

        $block['content']['#attached']['css'][] = drupal_get_path('module', 'single_blog') . '/single-blog.css';
      }
    }
  }

  return $block;
}

function single_blog_item_list_child_render($elements) {
  foreach (array_keys($elements['#items']) as $key) {
    if (is_array($elements['#items'][$key]['data'])) {
      $elements['#items'][$key]['data'] = 
        drupal_render($elements['#items'][$key]['data']);
    }
  }
  return $elements;
}