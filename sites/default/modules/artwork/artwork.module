<?php 
// $Id$


// DRUPAL HOOK FUNCTIONS

function artwork_entity_info() {
  $return['artwork'] = array(
    'label' => t('Artwork'),
    'controller class' => 'ArtworkController',
    'base table' => 'artwork',
    'revision table' => 'artwork_revision',
    'uri callback' => 'artwork_uri',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'aid',
      'revision' => 'vid',
      'bundle' => 'type',
      'label' => 'title',
     ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'static cache' => TRUE,
    'bundles' => array(),
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => FALSE,
      ),
      'teaser' => array(
        'label' => t('Teaser'),
        'custom settings' => FALSE,
      ),
    ), 
  );

  foreach (artwork_types() as $type => $info) {
    $return['artwork']['bundles'][$type] = array(
      'label' => $info->name,
      'admin' => array(
        'path' => 'admin/structure/artworks/manage/%artwork_type',
        'real path' => 'admin/structure/artworks/manage/' .
                       str_replace('_', '-', $type),
        'bundle argument' => 4,
        'access arguments' => array('administer artworks'),
      ),
    ); 
  }

  return $return;
}

function artwork_menu() {
  $items['admin/structure/artworks'] = array(
    'title' => 'Manage artworks',
    'description' => 'Manage artworks',
    'page callback' => 'artwork_overview_types',
    'access arguments' => array('administer artworks'),
    'file' => 'artwork.admin.inc',
  );

  $items['admin/structure/artworks/manage/%artwork_type'] = array(
    'title' => 'View artwork type',
    'title callback' => 'artwork_type_page_title',
    'title arguments' => array(4),
    'page callback' => 'artwork_information',
    'page arguments' => array(4),
    'access arguments' => array('administer artworks'),
    'file' => 'artwork.admin.inc',
  );

  $items['admin/structure/artworks/manage/%artwork_type/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );  

  $items['artwork/add'] = array(
    'title' => 'Add new artwork',
    'page callback' => 'artwork_add_page',
    'access arguments' => array('create artworks'),
    'weight' => 1,
    'menu_name' => 'management',
    'file' => 'artwork.pages.inc'
  );

  foreach (artwork_types() as $type) {
    $type_url_str = str_replace('_', '-', $type->type);
    $items['artwork/add/' . $type_url_str] = array(
      'title' => $type->name,
      'title callback' => 'check_plain',
      'page callback' => 'artwork_add',
      'page arguments' => array(2),
      'access arguments' => array('create artwork'),
      'description' => $type->description,
      'file' => 'artwork.pages.inc',
    );
  }

  $items['artwork/%artwork'] = array(
    'title callback' => 'artwork_page_title',
    'title arguments' => array(1),
    'page callback' => 'artwork_page_view',
    'page arguments' => array(1),
    'access arguments' => array('view artworks'),
    'type' => MENU_CALLBACK,
    'file' => 'artwork.pages.inc',
  );

  $items['artwork/$artwork/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['artwork/recent'] = array(
    'title' => 'Recently added artworks',
    'page callback' => 'artwork_page_list_recent',
    'access arguments' => array('view artworks'),
    'file' => 'artwork.pages.inc',
  );

  $items['artworks'] = array(
    'title' => 'All artworks',
    'page callback' => 'artworks_page',
    'access arguments' => array('view artworks'),
    'file' => 'artwork.pages.inc',
  );

  $items['artwork/%artwork/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'artwork_page_edit',
    'page arguments' => array(1),
    'access arguments' => array('update artworks'),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'artwork.pages.inc',
  );

  return $items;
}

function artwork_forms() {
  $forms = array();
  if ($types = artwork_types()) {
    foreach (array_keys($types) as $type) {
      $forms[$type . '_artwork_form']['callback'] = 'artwork_form';
    }
  }
  return $forms;
}

function artwork_block_info() {
  $blocks = array();
  $blocks['recent'] = array(
    'info' => t('Recently added artworks'), 
  );
  return $blocks;
}

function artwork_block_view($delta = '') {
  $block = array('subject' => '', 'content' => '');
  if ($delta == 'recent') {
    $block['subject'] = t('Recent added artworks');

    $result = artwork_list_recent(5);
    $artworks = artwork_load_multiple(array_keys($result['artwork']));
    $artwork_names = array();
    foreach ($artworks as $artwork) {
      $artwork_names[] = $artwork->title;
    }
    // $block['content'] = array(
    //   '#theme' => 'item_list',
    //   '#items' => $artwork_names,
    // );

    $block['content'] = array(
      'artwork' => array(
        '#theme' => 'item_list',
        '#items' => $artwork_names,
      ),
      'view_all' => array(
        '#type'  => 'link',
        '#title' => 'Show all',
        '#href'  => 'artworks',
      ),
      // 'view_all' => array(   //A different way of adding the same 'Show all' link. Using themes.
      //   '#theme' => 'link',
      //   '#text' => 'Show all',
      //   '#path' => 'artworks',
      //   '#options' => array('attributes' => array('title' => 'Show all')),
      // ),
    );
  }
  return $block;
}

// NON-DRUPAL-HOOK FUNCTIONS

function artwork_uri($artwork) {
  return array(
    'path' => 'artwork/' . $artwork->aid,
  );
}

function artwork_types() {
  $types = &drupal_static(__FUNCTION__);
  if (empty($types)) {
    $types['painting'] = (object)array(
     'type' => 'painting',
     'name' => t('Painting'),
     'description' => t('A picture made with paint.')
    );
    $types['sculpture'] = (object)array(
     'type' => 'sculpture',
     'name' => t('Sculpture'),
     'description' => t('A carving made out of stone or wood.')
    ); 
  }
  return $types;
}

function artwork_type_load($type) {
  $types = artwork_types();
  $type = str_replace('-', '_', $type);
  return isset($types[$type]) ? $types[$type] : FALSE;
}

function artwork_load($aid = NULL, $vid = NULL, $reset = FALSE) {
  $aids = (isset($aid) ? array($aid) : array());
  $conditions = (isset($vid) ? array('vid' => $vid) : array());
  $artwork = artwork_load_multiple($aids, $conditions, $reset);
  return $artwork ? reset($artwork) : FALSE;
}

function artwork_load_multiple($aids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('artwork', $aids, $conditions, $reset);
}

function artwork_list_recent($list_count) {
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'artwork')
    ->propertyOrderBy('created', 'DESC')
    ->range(0, $list_count);
  return $query->execute();
}