<?php

function role_access_node_access_records($node) {
  $account = user_load($node->uid);

  $roles = array_keys($account->roles);

  $grants = array();

  foreach ($roles as $grant_id) {
    $grants[] = array(
      'realm' => 'role_access',
      'gid' => $grant_id,
      'grant_view' => 1,
      'grant_update' => 1,
      'grant_delete' => 1,
      'priority' => 0,
    );
  }
  return $grants;
}

function role_access_node_grants($account, $op) {
  $roles = array_keys($account->roles);

  if (empty($roles)) {
    return array();
  }

  $grants = array();

  foreach ($roles as $grant_id) {
    if (user_access($op . ' role access content')) {
      $grants['role_access'][] = $grant_id;  
    }
  }

  return $grants;
}

function role_access_permission() {
  return array(
    'view role access content' =>  array(
      'title' => t('View role-restricted content'),
      'description' => t('Allow users to view content assigned by role.'),
    ),
    'update role access content' =>  array(
      'title' => t('Edit role-restricted content'),
      'description' => t('Allow users to edit content assigned by role.'),
    ),
    'delete role access content' =>  array(
      'title' => t('Delete role-restricted content'),
      'description' => t('Allow users to delete content assigned by role.'),
    ),
  );
}

function role_access_node_access_explain($row) {
  // If not our grant, ignore.
  if ($row->realm != 'role_access') {
    return NULL;
  }
  // Get a list of user roles.
  $roles = user_roles();
  // Get our permission definitions.
  $permissions = role_access_permission();

  // Initiate a results variable, for theming the output.
  $results = array();
  // Check each access rule.
  foreach (array('view', 'update', 'delete') as $op) {
    if (in_array($row->gid, array_keys($roles))) {
      $results[] = t('%roles with the permission %perm may %op this content', array('%role' => $roles[$row->gid], '%perm' => $permissions[$op . ' role access content']['title'], '%op' => $op));
    }
  }
  // Prepare for theming. The $results are already secure, having run
  // through t().
  $variables = array(
    'items' => $results,
    'title' => '',
    'type' => 'ul',
  );
  // Return a nicely themed list.
  return theme('item_list', $variables);
}
